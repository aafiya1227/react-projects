{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\react-food-app\\\\src\\\\Store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport CartContext from \"./Cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst CartReducer = (state, action) => {\n  if (action.type === \"add\") {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const exitingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[exitingCartItemIndex];\n    let updatedItems;\n\n    if (existingCartItem) {\n      const updatedItem = { ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\n_c = CartReducer;\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(CartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: \"add\",\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: \"remove\",\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c2 = CartProvider;\nexport default CartProvider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CartReducer\");\n$RefreshReg$(_c2, \"CartProvider\");","map":{"version":3,"names":["useReducer","CartContext","defaultCartState","items","totalAmount","CartReducer","state","action","type","updatedTotalAmount","item","price","amount","exitingCartItemIndex","findIndex","id","existingCartItem","updatedItems","updatedItem","existingCartItemIndex","concat","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"sources":["C:/Users/Administrator/Desktop/react-food-app/src/Store/CartProvider.js"],"sourcesContent":["import { useReducer } from \"react\";\r\nimport CartContext from \"./Cart-context\";\r\nconst defaultCartState = {\r\n  items: [],\r\n  totalAmount: 0,\r\n};\r\n\r\nconst CartReducer = (state, action) => {\r\n  if (action.type === \"add\") {\r\n    const updatedTotalAmount =\r\n      state.totalAmount + action.item.price * action.item.amount;\r\n    const exitingCartItemIndex = state.items.findIndex(\r\n      (item) => item.id === action.item.id\r\n    );\r\n    const existingCartItem=state.items[exitingCartItemIndex]\r\n    let updatedItems;\r\nif(existingCartItem) {\r\n  const updatedItem={\r\n    ...existingCartItem,\r\n    amount:existingCartItem.amount+action.item.amount\r\n  }\r\n  updatedItems=[...state.items]\r\n  updatedItems[existingCartItemIndex]=updatedItem\r\n}else{\r\n \r\n  updatedItems = state.items.concat(action.item);\r\n}\r\n\r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: updatedTotalAmount,\r\n    };\r\n  }\r\n\r\n  return defaultCartState;\r\n};\r\n\r\nconst CartProvider = (props) => {\r\n  const [cartState, dispatchCartAction] = useReducer(\r\n    CartReducer,\r\n    defaultCartState\r\n  );\r\n\r\n  const addItemToCartHandler = (item) => {\r\n    dispatchCartAction({ type: \"add\", item: item });\r\n  };\r\n  const removeItemFromCartHandler = (id) => {\r\n    dispatchCartAction({ type: \"remove\", id: id });\r\n  };\r\n  const cartContext = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItemToCartHandler,\r\n    removeItem: removeItemFromCartHandler,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\nexport default CartProvider;\r\n"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AACA,MAAMC,gBAAgB,GAAG;EACvBC,KAAK,EAAE,EADgB;EAEvBC,WAAW,EAAE;AAFU,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACrC,IAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;IACzB,MAAMC,kBAAkB,GACtBH,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACG,IAAP,CAAYC,KAAZ,GAAoBJ,MAAM,CAACG,IAAP,CAAYE,MADtD;IAEA,MAAMC,oBAAoB,GAAGP,KAAK,CAACH,KAAN,CAAYW,SAAZ,CAC1BJ,IAAD,IAAUA,IAAI,CAACK,EAAL,KAAYR,MAAM,CAACG,IAAP,CAAYK,EADP,CAA7B;IAGA,MAAMC,gBAAgB,GAACV,KAAK,CAACH,KAAN,CAAYU,oBAAZ,CAAvB;IACA,IAAII,YAAJ;;IACJ,IAAGD,gBAAH,EAAqB;MACnB,MAAME,WAAW,GAAC,EAChB,GAAGF,gBADa;QAEhBJ,MAAM,EAACI,gBAAgB,CAACJ,MAAjB,GAAwBL,MAAM,CAACG,IAAP,CAAYE;MAF3B,CAAlB;MAIAK,YAAY,GAAC,CAAC,GAAGX,KAAK,CAACH,KAAV,CAAb;MACAc,YAAY,CAACE,qBAAD,CAAZ,GAAoCD,WAApC;IACD,CAPD,MAOK;MAEHD,YAAY,GAAGX,KAAK,CAACH,KAAN,CAAYiB,MAAZ,CAAmBb,MAAM,CAACG,IAA1B,CAAf;IACD;;IAEG,OAAO;MACLP,KAAK,EAAEc,YADF;MAELb,WAAW,EAAEK;IAFR,CAAP;EAID;;EAED,OAAOP,gBAAP;AACD,CA5BD;;KAAMG,W;;AA8BN,MAAMgB,YAAY,GAAIC,KAAD,IAAW;EAAA;;EAC9B,MAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCxB,UAAU,CAChDK,WADgD,EAEhDH,gBAFgD,CAAlD;;EAKA,MAAMuB,oBAAoB,GAAIf,IAAD,IAAU;IACrCc,kBAAkB,CAAC;MAAEhB,IAAI,EAAE,KAAR;MAAeE,IAAI,EAAEA;IAArB,CAAD,CAAlB;EACD,CAFD;;EAGA,MAAMgB,yBAAyB,GAAIX,EAAD,IAAQ;IACxCS,kBAAkB,CAAC;MAAEhB,IAAI,EAAE,QAAR;MAAkBO,EAAE,EAAEA;IAAtB,CAAD,CAAlB;EACD,CAFD;;EAGA,MAAMY,WAAW,GAAG;IAClBxB,KAAK,EAAEoB,SAAS,CAACpB,KADC;IAElBC,WAAW,EAAEmB,SAAS,CAACnB,WAFL;IAGlBwB,OAAO,EAAEH,oBAHS;IAIlBI,UAAU,EAAEH;EAJM,CAApB;EAOA,oBACE,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAEC,WAA7B;IAAA,UACGL,KAAK,CAACQ;EADT;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAxBD;;GAAMT,Y;;MAAAA,Y;AAyBN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}