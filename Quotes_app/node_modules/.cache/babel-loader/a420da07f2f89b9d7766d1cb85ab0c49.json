{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\router practice\\\\src\\\\components\\\\quotes\\\\QuoteList.js\",\n  _s = $RefreshSig$();\nimport { Fragment } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sortQuotes = (quotes, ascending) => {\n  return quote.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\nconst QuoteList = props => {\n  _s();\n  const history = useHistory();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const isSortingAscending = queryParams.get(\"sort\") === \"asc\";\n  const sortedQuotes = sortQuotes(props.quote, isSortingAscending);\n  const changeSortingHandler = () => {\n    history.push(`/quotes?sort=` + (isSortingAscending ? \"desc\" : \"asc\"));\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.sorting,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: changeSortingHandler,\n        children: [\"Sort \", isSortingAscending ? \"Descending\" : \"Ascending\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.list,\n      children: sortedQuotes.map(quote => /*#__PURE__*/_jsxDEV(QuoteItem, {\n        id: quote.id,\n        author: quote.author,\n        text: quote.text\n      }, quote.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(QuoteList, \"azjqGSEfmvz5+G/YRUZm7OceOpI=\", false, function () {\n  return [useHistory, useLocation];\n});\n_c = QuoteList;\nexport default QuoteList;\nvar _c;\n$RefreshReg$(_c, \"QuoteList\");","map":{"version":3,"names":["Fragment","useHistory","useLocation","QuoteItem","classes","sortQuotes","quotes","ascending","quote","sort","quoteA","quoteB","id","QuoteList","props","history","location","queryParams","URLSearchParams","search","isSortingAscending","get","sortedQuotes","changeSortingHandler","push","sorting","list","map","author","text"],"sources":["C:/Users/Administrator/Desktop/router practice/src/components/quotes/QuoteList.js"],"sourcesContent":["import { Fragment } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\n\nconst sortQuotes = (quotes, ascending) => {\n  return quote.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const isSortingAscending = queryParams.get(\"sort\") === \"asc\";\n  const sortedQuotes=sortQuotes(props.quote,isSortingAscending)\n  const changeSortingHandler = () => {\n    history.push(`/quotes?sort=` + (isSortingAscending ? \"desc\" : \"asc\"));\n  };\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>\n          Sort {isSortingAscending ? \"Descending\" : \"Ascending\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,UAAU,EAAEC,WAAW,QAAQ,kBAAkB;AAE1D,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,OAAO,MAAM,wBAAwB;AAAC;AAE7C,MAAMC,UAAU,GAAG,CAACC,MAAM,EAAEC,SAAS,KAAK;EACxC,OAAOC,KAAK,CAACC,IAAI,CAAC,CAACC,MAAM,EAAEC,MAAM,KAAK;IACpC,IAAIJ,SAAS,EAAE;MACb,OAAOG,MAAM,CAACE,EAAE,GAAGD,MAAM,CAACC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;IACvC,CAAC,MAAM;MACL,OAAOF,MAAM,CAACE,EAAE,GAAGD,MAAM,CAACC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;IACvC;EACF,CAAC,CAAC;AACJ,CAAC;AAED,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAAA;EAC3B,MAAMC,OAAO,GAAGd,UAAU,EAAE;EAC5B,MAAMe,QAAQ,GAAGd,WAAW,EAAE;EAC9B,MAAMe,WAAW,GAAG,IAAIC,eAAe,CAACF,QAAQ,CAACG,MAAM,CAAC;EACxD,MAAMC,kBAAkB,GAAGH,WAAW,CAACI,GAAG,CAAC,MAAM,CAAC,KAAK,KAAK;EAC5D,MAAMC,YAAY,GAACjB,UAAU,CAACS,KAAK,CAACN,KAAK,EAACY,kBAAkB,CAAC;EAC7D,MAAMG,oBAAoB,GAAG,MAAM;IACjCR,OAAO,CAACS,IAAI,CAAE,eAAc,IAAIJ,kBAAkB,GAAG,MAAM,GAAG,KAAK,CAAC,CAAC;EACvE,CAAC;EAED,oBACE,QAAC,QAAQ;IAAA,wBACP;MAAK,SAAS,EAAEhB,OAAO,CAACqB,OAAQ;MAAA,uBAC9B;QAAQ,OAAO,EAAEF,oBAAqB;QAAA,oBAC9BH,kBAAkB,GAAG,YAAY,GAAG,WAAW;MAAA;QAAA;QAAA;QAAA;MAAA;IAC9C;MAAA;MAAA;MAAA;IAAA,QACL,eACN;MAAI,SAAS,EAAEhB,OAAO,CAACsB,IAAK;MAAA,UACzBJ,YAAY,CAACK,GAAG,CAAEnB,KAAK,iBACtB,QAAC,SAAS;QAER,EAAE,EAAEA,KAAK,CAACI,EAAG;QACb,MAAM,EAAEJ,KAAK,CAACoB,MAAO;QACrB,IAAI,EAAEpB,KAAK,CAACqB;MAAK,GAHZrB,KAAK,CAACI,EAAE;QAAA;QAAA;QAAA;MAAA,QAKhB;IAAC;MAAA;MAAA;MAAA;IAAA,QACC;EAAA;IAAA;IAAA;IAAA;EAAA,QACI;AAEf,CAAC;AAAC,GA7BIC,SAAS;EAAA,QACGZ,UAAU,EACTC,WAAW;AAAA;AAAA,KAFxBW,SAAS;AA+Bf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module"}