{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\router practice\\\\src\\\\components\\\\comments\\\\NewCommentForm.js\",\n  _s = $RefreshSig$();\nimport { useRef, useEffect } from 'react';\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from './NewCommentForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewCommentForm = props => {\n  _s();\n  const commentTextRef = useRef();\n  const {\n    sendRequest,\n    status,\n    error\n  } = useHttp(addComment);\n  const {\n    onAddedComment\n  } = props;\n  useEffect(() => {\n    if (status === 'completed') {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n  const submitFormHandler = event => {\n    event.preventDefault();\n    const enteredText = commentTextRef.current.value;\n    sendRequest({\n      commentData: {\n        text: enteredText\n      },\n      quoteId: props.quoteId\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: submitFormHandler,\n    children: [status === 'pending' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 55\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      onSubmit: submitFormHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"comment\",\n        children: \"Your Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"comment\",\n        rows: \"5\",\n        ref: commentTextRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        children: \"Add Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(NewCommentForm, \"5n2yDwIt5uPt+pPjRFVr+nmVnaM=\", false, function () {\n  return [useHttp];\n});\n_c = NewCommentForm;\nexport default NewCommentForm;\nvar _c;\n$RefreshReg$(_c, \"NewCommentForm\");","map":{"version":3,"names":["useRef","useEffect","useHttp","addComment","LoadingSpinner","classes","NewCommentForm","props","commentTextRef","sendRequest","status","error","onAddedComment","submitFormHandler","event","preventDefault","enteredText","current","value","commentData","text","quoteId","form","control","actions"],"sources":["C:/Users/Administrator/Desktop/router practice/src/components/comments/NewCommentForm.js"],"sourcesContent":["import { useRef,useEffect } from 'react';\nimport useHttp from '../../hooks/use-http';\n\nimport {addComment} from \"../../lib/api\"\nimport LoadingSpinner from \"../UI/LoadingSpinner\"\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\nconst {sendRequest,status,error}=useHttp(addComment)\nconst {onAddedComment}=props\nuseEffect(()=>{\nif (status==='completed') {\n  onAddedComment()\n}\n},[status,error,onAddedComment])\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\nconst enteredText=commentTextRef.current.value\n    sendRequest({commentData:{text:enteredText},quoteId:props.quoteId})\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status==='pending'&&(<div className='centered'><LoadingSpinner/></div>)}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n"],"mappings":";;AAAA,SAASA,MAAM,EAACC,SAAS,QAAQ,OAAO;AACxC,OAAOC,OAAO,MAAM,sBAAsB;AAE1C,SAAQC,UAAU,QAAO,eAAe;AACxC,OAAOC,cAAc,MAAM,sBAAsB;AACjD,OAAOC,OAAO,MAAM,6BAA6B;AAAC;AAElD,MAAMC,cAAc,GAAIC,KAAK,IAAK;EAAA;EAChC,MAAMC,cAAc,GAAGR,MAAM,EAAE;EACjC,MAAM;IAACS,WAAW;IAACC,MAAM;IAACC;EAAK,CAAC,GAACT,OAAO,CAACC,UAAU,CAAC;EACpD,MAAM;IAACS;EAAc,CAAC,GAACL,KAAK;EAC5BN,SAAS,CAAC,MAAI;IACd,IAAIS,MAAM,KAAG,WAAW,EAAE;MACxBE,cAAc,EAAE;IAClB;EACA,CAAC,EAAC,CAACF,MAAM,EAACC,KAAK,EAACC,cAAc,CAAC,CAAC;EAE9B,MAAMC,iBAAiB,GAAIC,KAAK,IAAK;IACnCA,KAAK,CAACC,cAAc,EAAE;IAC1B,MAAMC,WAAW,GAACR,cAAc,CAACS,OAAO,CAACC,KAAK;IAC1CT,WAAW,CAAC;MAACU,WAAW,EAAC;QAACC,IAAI,EAACJ;MAAW,CAAC;MAACK,OAAO,EAACd,KAAK,CAACc;IAAO,CAAC,CAAC;EACrE,CAAC;EAED,oBACE;IAAM,SAAS,EAAEhB,OAAO,CAACiB,IAAK;IAAC,QAAQ,EAAET,iBAAkB;IAAA,WACxDH,MAAM,KAAG,SAAS,iBAAG;MAAK,SAAS,EAAC,UAAU;MAAA,uBAAC,QAAC,cAAc;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QAAO,eACxE;MAAK,SAAS,EAAEL,OAAO,CAACkB,OAAQ;MAAC,QAAQ,EAAEV,iBAAkB;MAAA,wBAC3D;QAAO,OAAO,EAAC,SAAS;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAqB,eAC7C;QAAU,EAAE,EAAC,SAAS;QAAC,IAAI,EAAC,GAAG;QAAC,GAAG,EAAEL;MAAe;QAAA;QAAA;QAAA;MAAA,QAAY;IAAA;MAAA;MAAA;MAAA;IAAA,QAC5D,eACN;MAAK,SAAS,EAAEH,OAAO,CAACmB,OAAQ;MAAA,uBAC9B;QAAQ,SAAS,EAAC,KAAK;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAqB;MAAA;MAAA;MAAA;IAAA,QACxC;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEX,CAAC;AAAC,GA5BIlB,cAAc;EAAA,QAEaJ,OAAO;AAAA;AAAA,KAFlCI,cAAc;AA8BpB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module"}